# Generated by Django 4.2 on 2023-12-31 22:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0012_alter_team_members'),
    ]

    operations = [
        migrations.CreateModel(
            name='Collaborators',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Collaborator',
                'verbose_name_plural': 'Collaborators',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('stripe_customer_id', models.CharField(blank=True, max_length=250, null=True)),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
            },
        ),
        migrations.CreateModel(
            name='Folder',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(max_length=250)),
                ('icon_id', models.CharField(default='icon.png', max_length=250)),
                ('data', models.TextField(blank=True, null=True)),
                ('in_trash', models.TextField(blank=True, null=True)),
                ('banner_url', models.URLField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Folder',
                'verbose_name_plural': 'Folders',
            },
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('unit_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('type', models.CharField(choices=[('recurring', 'Recurring'), ('one-time', 'One-Time')], default='recurring', max_length=250)),
                ('interval', models.CharField(choices=[('day', 'Day'), ('week', 'Week'), ('month', 'Month'), ('year', 'Year')], default='month', max_length=250)),
                ('interval_count', models.IntegerField(default=1)),
                ('trial_period_days', models.IntegerField(default=30)),
                ('metadata', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Price',
                'verbose_name_plural': 'Prices',
            },
        ),
        migrations.CreateModel(
            name='PriceRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Price Relation',
                'verbose_name_plural': 'Price Relations',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=250)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.URLField(blank=True, null=True)),
                ('metadata', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.CreateModel(
            name='ProductRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prices', models.ManyToManyField(to='core.price')),
            ],
            options={
                'verbose_name': 'Product Relation',
                'verbose_name_plural': 'Product Relations',
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('status', models.CharField(choices=[('unpaid', 'Unpaid'), ('active', 'Active'), ('trialing', 'Trialing'), ('past_due', 'Past Due'), ('canceled', 'Canceled'), ('incomplete', 'Incomplete'), ('incomplete_expired', 'Incomplete Expired')], default='unpaid', max_length=250)),
                ('metadata', models.TextField(blank=True, null=True)),
                ('quantity', models.IntegerField(default=1)),
                ('cancel_at_period_end', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('current_period_start', models.DateTimeField(auto_now_add=True)),
                ('current_period_end', models.DateTimeField(auto_now_add=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('canceled_at', models.DateTimeField(blank=True, null=True)),
                ('trial_start', models.DateTimeField(blank=True, null=True)),
                ('trial_end', models.DateTimeField(blank=True, null=True)),
                ('price', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.price')),
            ],
            options={
                'verbose_name': 'Subscription',
                'verbose_name_plural': 'Subscriptions',
            },
        ),
        migrations.CreateModel(
            name='Workspace',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(max_length=250)),
                ('icon_id', models.CharField(default='icon.png', max_length=250)),
                ('data', models.TextField(blank=True, null=True)),
                ('in_trash', models.TextField(blank=True, null=True)),
                ('logo', models.URLField(blank=True, null=True)),
                ('banner_url', models.URLField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Workspace',
                'verbose_name_plural': 'Workspaces',
            },
        ),
        migrations.RemoveField(
            model_name='database',
            name='author',
        ),
        migrations.RemoveField(
            model_name='database',
            name='collaborators',
        ),
        migrations.RemoveField(
            model_name='database',
            name='comments',
        ),
        migrations.RemoveField(
            model_name='database',
            name='content_type',
        ),
        migrations.RemoveField(
            model_name='database',
            name='tags',
        ),
        migrations.RemoveField(
            model_name='filter',
            name='author',
        ),
        migrations.RemoveField(
            model_name='filter',
            name='comment',
        ),
        migrations.RemoveField(
            model_name='history',
            name='author',
        ),
        migrations.RemoveField(
            model_name='history',
            name='comment',
        ),
        migrations.RemoveField(
            model_name='image',
            name='author',
        ),
        migrations.RemoveField(
            model_name='link',
            name='author',
        ),
        migrations.RemoveField(
            model_name='page',
            name='comments',
        ),
        migrations.RemoveField(
            model_name='page',
            name='content_type',
        ),
        migrations.RemoveField(
            model_name='page',
            name='history',
        ),
        migrations.RemoveField(
            model_name='page',
            name='share',
        ),
        migrations.RemoveField(
            model_name='page',
            name='tags',
        ),
        migrations.RemoveField(
            model_name='relationship',
            name='comment',
        ),
        migrations.RemoveField(
            model_name='relationship',
            name='filters',
        ),
        migrations.RemoveField(
            model_name='relationship',
            name='page_from',
        ),
        migrations.RemoveField(
            model_name='relationship',
            name='page_to',
        ),
        migrations.RemoveField(
            model_name='relationship',
            name='table_from',
        ),
        migrations.RemoveField(
            model_name='relationship',
            name='table_to',
        ),
        migrations.RemoveField(
            model_name='share',
            name='author',
        ),
        migrations.RemoveField(
            model_name='share',
            name='comment',
        ),
        migrations.RemoveField(
            model_name='table',
            name='assignee',
        ),
        migrations.RemoveField(
            model_name='table',
            name='tags',
        ),
        migrations.RemoveField(
            model_name='tag',
            name='team',
        ),
        migrations.RemoveField(
            model_name='team',
            name='members',
        ),
        migrations.RemoveField(
            model_name='text',
            name='author',
        ),
        migrations.RemoveField(
            model_name='video',
            name='author',
        ),
        migrations.AlterModelOptions(
            name='file',
            options={'verbose_name': 'File', 'verbose_name_plural': 'Files'},
        ),
        migrations.RemoveField(
            model_name='file',
            name='author',
        ),
        migrations.RemoveField(
            model_name='file',
            name='file',
        ),
        migrations.RemoveField(
            model_name='file',
            name='updated_at',
        ),
        migrations.AddField(
            model_name='customuser',
            name='avatar_url',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='customuser',
            name='billing_address',
            field=models.CharField(blank=True, max_length=250, null=True),
        ),
        migrations.AddField(
            model_name='customuser',
            name='payment_method',
            field=models.CharField(blank=True, max_length=250, null=True),
        ),
        migrations.AddField(
            model_name='file',
            name='banner_url',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='file',
            name='data',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='file',
            name='icon_id',
            field=models.CharField(default='icon.png', max_length=250),
        ),
        migrations.AddField(
            model_name='file',
            name='in_trash',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.DeleteModel(
            name='Comment',
        ),
        migrations.DeleteModel(
            name='Database',
        ),
        migrations.DeleteModel(
            name='Filter',
        ),
        migrations.DeleteModel(
            name='History',
        ),
        migrations.DeleteModel(
            name='Image',
        ),
        migrations.DeleteModel(
            name='Link',
        ),
        migrations.DeleteModel(
            name='Page',
        ),
        migrations.DeleteModel(
            name='Relationship',
        ),
        migrations.DeleteModel(
            name='Share',
        ),
        migrations.DeleteModel(
            name='Table',
        ),
        migrations.DeleteModel(
            name='Tag',
        ),
        migrations.DeleteModel(
            name='Team',
        ),
        migrations.DeleteModel(
            name='Text',
        ),
        migrations.DeleteModel(
            name='Video',
        ),
        migrations.AddField(
            model_name='workspace',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='subscription',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='pricerelation',
            name='product',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.product'),
        ),
        migrations.AddField(
            model_name='price',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.product'),
        ),
        migrations.AddField(
            model_name='folder',
            name='workspace',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.workspace'),
        ),
        migrations.AddField(
            model_name='collaborators',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='collaborators',
            name='workspace',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.workspace'),
        ),
        migrations.AddField(
            model_name='file',
            name='folder',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.folder'),
        ),
        migrations.AddField(
            model_name='file',
            name='workspace',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.workspace'),
        ),
    ]
